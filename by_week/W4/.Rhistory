library(tidyverse)
library(httr)
library(rvest)
library(jsonlite)
# Build the Crossref query with all the components
api_first <- "http://api.crossref.org/works?query="
query <- "artificial+neural+network"
filter <- "&filter="
funder<- "has-funder:true,"
from_date <- "from-pub-date:2015-01-01,"
to_date <- "until-pub-date:2015-01-31"
limit <- "&rows=400"
polite <- "&mailto=f.bone@sussex.ac.uk"
# Put the query together and call it
query_full <- paste0(api_first, query,filter,funder, from_date,to_date, limit, polite)
fetch <- GET(query_full)
# transform the call into a readable component
return <- rawToChar(fetch$content)
return_all <- jsonlite::fromJSON(return)
ANN_data <- as.data.frame(return_all$message$items)
head(ANN_data, n=10)
colnames(ANN_data)
ANN_funder <- ANN_data %>%
select(`container-title`, DOI, title, funder) %>%
rename(DOI_paper = DOI)%>%
unnest(funder)
head(ANN_funder, n=20)
ANN_funder <- ANN_funder %>%
select(`container-title`, DOI_paper, title, name, DOI) %>%
rename(funder_name = name) %>%
rename(funder_doi  = DOI)
Funder_summary <- ANN_funder %>%
group_by(funder_name)%>%
summarise(count= n())%>%
ungroup()%>%
arrange(desc(count))
head(Funder_summary, n=5)
rm(list=ls())
library(tidyverse)
library(readr)
library(lubridate)
mypath <- "/Volumes/FB11/Programming/GitHub/Techno diffusion/data/master"
setwd(mypath)
mypath <- "/Volumes/FB11/Programming/GitHub/Techno diffusion/data/master"
setwd(mypath)
description_master <- read_csv("argos_product_description_master.csv")
product_master <- read_csv("argos_product_master.csv")
tree_master <- read_csv("product_tree_master.csv")
